// Bootstrap overrides
//
// Copy variables from `_variables.scss` to this file to override default values
// without modifying source files.

// $font-family: "Gotham SSm A", "Gotham SSm B", "Helvetica Neue", Helvetica, Arial, sans-serif;
$font-family: 'Hiragino Kaku Gothic Pro', 'Meiryo', sans-serif;
$baseline_px: 16px;
$pagination-color: $link-color !default;
$bg-color: #ecf0f1;
$bg-color-new: #263445;

$brand-color: #ff6f40;

$shuttle-gray: #5a6170;

$shuttle-gray-new: #ecf0f5;

$new-blue: #3c8dbc;
$new-blue-active: #367fa9;

$new-blue-light: #BCD7FF;

$gull-gray: #9da6b8;
$alto: #dcdcdc;
$cornflower-blue: #6c63ff;


$facebook-color: rgb(59,89,152);
$google-color: rgb(220,74,56);

$input-btn-border-width: 2px;




$blue-color:      #349be0;
$darkBlue-color:  #446cb3;
$green-color:     #5bc4be;
$lime-color:      #c6ff00;
$red2-color:      #ea5432;
$red-color:       #ff2525;
$orange-color:    #fe9a76;
$yellow-color:    #ffd700;
$olive-color:     #32cd32;
$teal-color:      #008080;
$violet-color:    #ca6bff;
$purple-color:    #b413ec;
$pink-color:      #ff1493;
$brown-color:     #a52a2a;
$grey-color:      #a0a0a0;
$black-color:     #000000;


$colors: ( 
  'blue': $blue-color,
  'darkBlue': $darkBlue-color,
  'green': $green-color,   
  'lime': $lime-color,    
  'red2': $red2-color,    
  'red': $red-color,     
  'orange': $orange-color,  
  'yellow': $yellow-color,  
  'olive': $olive-color,   
  'teal': $teal-color,    
  'violet': $violet-color,  
  'purple': $purple-color,  
  'pink': $pink-color,    
  'brown': $brown-color,   
  'grey': $grey-color,    
  'black': $black-color
  );
@each $i, $color in $colors {
  .rtable-#{$i} {
    border-bottom: 10px solid $color;
    th {
      background-color: $color;
      color: #fff;
            // @if (lightness($color) > 50) {
            //     color: #000000;
            // }
            // @else {
            //      color: #fff;
            // }
          }
          thead tr {
            .headerSortDown,
            .headerSortUp {
              background-color: darken($color, 10) !important;
            }
          }
          tbody tr:nth-of-type(even) {
            background-color: rgba($color, .15);
          }
          th,
          td {
            border: 1px solid rgba($color, .08);
          }
        }
      }

.global-padding {
  padding: 20px;
}
button, .btn, a {
  cursor: pointer;
}
@font-face{
  font-family:'Glyphicons Halflings';src:url(../fonts/glyphicons-halflings-regular.eot);src:url(../fonts/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),url(../fonts/glyphicons-halflings-regular.woff2) format('woff2'),url(../fonts/glyphicons-halflings-regular.woff) format('woff'),url(../fonts/glyphicons-halflings-regular.ttf) format('truetype'),url(../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg')
}

table.dataTable thead .sorting,
table.dataTable thead .sorting_asc,
table.dataTable thead .sorting_desc,
table.dataTable thead .sorting_asc_disabled,
table.dataTable thead .sorting_desc_disabled {
    cursor: pointer;
    position: relative
}
table.dataTable thead .sorting:after,
table.dataTable thead .sorting_asc:after,
table.dataTable thead .sorting_desc:after,
table.dataTable thead .sorting_asc_disabled:after,
table.dataTable thead .sorting_desc_disabled:after {
    position: absolute;
    bottom: 8px;
    right: 8px;
    display: block;
    font-family: 'Glyphicons Halflings';
    opacity: 0.5
}

table.dataTable thead .sorting:after {
    opacity: 0.2;
    content: "\e150"
}

table.dataTable thead .sorting_asc:after {
    content: "\e155"
}

table.dataTable thead .sorting_desc:after {
    content: "\e156"
}


@mixin rem($property, $px_values) {
  $baseline_rem: ($baseline_px / 1rem);
  #{$property}: $px_values;
  @if type-of($px_values) == 'number' {
    #{$property}: $px_values / $baseline_rem;
  }
  @else {
    $rem_values: ();

    @each $value in $px_values {

      @if $value == 0 {
        $rem_values: append($rem_values, $value);
      }

      @else {
        $rem_values: append($rem_values, ($value / $baseline_rem) );
      }

    }

    #{$property}: $rem_values;

  }

}